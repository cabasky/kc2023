ni
ni
si
ni
ni
ni
q
disable
b* 0x415da0
c
ni
c
c
q
c
ni
q
c
teles $rsp+0x70
teles $rdx
teles $rip + 0x3145a
teles $rip+0x3145a
ni
q
c
q
c
fin
bins
q
c
c
q
q
q
q
q
vmmap
q
set args -load ./VecPass.so -winmt ./main.ll
r
b llvm::RegisterPass<(anonymous namespace)::winmt>::RegisterPass(llvm::StringRef, llvm::StringRef, bool, bool) 
r
c
q
bins
enable
c
teles $ck
bins
c
c
c
disable
b* 0x415ba0
c
back
bins
q
c
q
c
bins
c
fin
bins
c
fin
bins
c
fin
bins
c
c
fin
bins
c
fin
c
fin
c
fin
c
c
c
c
c
bins
q
c
bins
q
c
bins
q
c
bins
teles 0x509340
p $ck
q
bins
c
bins
bins
c
bins
c
bins
c
c
bins
c
bins
c
disable
b* 0x415ba0
c
c
q
disable
b execve
c
fin
q
disable
b execve
c
ni
0x7ffdca56e228
teles 0x7ffdca56e228
ni
q
disable 
b execve
c
back
q
q
c
bins
c
c
c
bins
c
q
q
c
c
c
c
c
c
c
q
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
q
teles $ck
teles $ck-0x10
teles $ck-0x20
teles $ck-0x30
teles $ck-0x40
teles $ck-0x60
teles $ck-0x100
teles $ck-0x200
teles $ck-0x400
teles $ck-0x100
bins
teles $ck
q
search -8 0xdeadbeef
teles ck
teles $ck
search -8 $ck
search -8 *$ck
p$ck
teles $ck
bins
teles 0x4f3c10
teles 0x4f3c10 200
bins
teles 0x65dcc0
teles $ck
teles $ck 32
q
b free
c
c
c
c
teles $ck 20
q
b free
c
c
teles $ck 20
teles $ck 32
c
c
teles $ck 32
q
b std::vector<ChunkInfo, std::allocator<ChunkInfo> >::erase(__gnu_cxx::__normal_iterator<ChunkInfo const*, std::vector<ChunkInfo, std::allocator<ChunkInfo> > >)
b std::vector<ChunkInfo, std::allocator<ChunkInfo> >::erase(__gnu_cxx::__normal_iterator<ChunkInfo const*, std::vector<ChunkInfo, std::allocator<ChunkInfo> > >)@plt 
c
c
c
c
c
b std::copy
teles $rdid
teles $rdi
teles $rdi-0x8
b ChunkInfo::~ChunkInfo()
c
teles 0x13290e0
q
b free
c
teles $ck
teles $ck 32
back
bins
q
c
back
q
bins
teles $fs
teles 0x17e0c20
teles 0x118eac6089cd7cf0
search -8 0x118eac6089cd7cf0
teles $fs
